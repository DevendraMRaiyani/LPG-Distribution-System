//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LPG_Distribution_System.StockMgntRef {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Cylinder", Namespace="http://schemas.datacontract.org/2004/07/WcfService2")]
    [System.SerializableAttribute()]
    public partial class Cylinder : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CylinderTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuentityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="Cylinder Type")]
        public string CylinderType {
            get {
                return this.CylinderTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CylinderTypeField, value) != true)) {
                    this.CylinderTypeField = value;
                    this.RaisePropertyChanged("CylinderType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quentity {
            get {
                return this.QuentityField;
            }
            set {
                if ((this.QuentityField.Equals(value) != true)) {
                    this.QuentityField = value;
                    this.RaisePropertyChanged("Quentity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Stove", Namespace="http://schemas.datacontract.org/2004/07/WcfService2")]
    [System.SerializableAttribute()]
    public partial class Stove : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuentityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quentity {
            get {
                return this.QuentityField;
            }
            set {
                if ((this.QuentityField.Equals(value) != true)) {
                    this.QuentityField = value;
                    this.RaisePropertyChanged("Quentity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="StockMgntRef.IStockMgnt")]
    public interface IStockMgnt {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockMgnt/GetCylinders", ReplyAction="http://tempuri.org/IStockMgnt/GetCylindersResponse")]
        LPG_Distribution_System.StockMgntRef.Cylinder[] GetCylinders();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockMgnt/GetCylinders", ReplyAction="http://tempuri.org/IStockMgnt/GetCylindersResponse")]
        System.Threading.Tasks.Task<LPG_Distribution_System.StockMgntRef.Cylinder[]> GetCylindersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockMgnt/GetStoves", ReplyAction="http://tempuri.org/IStockMgnt/GetStovesResponse")]
        LPG_Distribution_System.StockMgntRef.Stove[] GetStoves();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockMgnt/GetStoves", ReplyAction="http://tempuri.org/IStockMgnt/GetStovesResponse")]
        System.Threading.Tasks.Task<LPG_Distribution_System.StockMgntRef.Stove[]> GetStovesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockMgnt/GetRegulators", ReplyAction="http://tempuri.org/IStockMgnt/GetRegulatorsResponse")]
        LPG_Distribution_System.StockMgntRef.Stove GetRegulators();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockMgnt/GetRegulators", ReplyAction="http://tempuri.org/IStockMgnt/GetRegulatorsResponse")]
        System.Threading.Tasks.Task<LPG_Distribution_System.StockMgntRef.Stove> GetRegulatorsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockMgnt/SetECylinders", ReplyAction="http://tempuri.org/IStockMgnt/SetECylindersResponse")]
        string SetECylinders(string a, int c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockMgnt/SetECylinders", ReplyAction="http://tempuri.org/IStockMgnt/SetECylindersResponse")]
        System.Threading.Tasks.Task<string> SetECylindersAsync(string a, int c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockMgnt/SetFCylinders", ReplyAction="http://tempuri.org/IStockMgnt/SetFCylindersResponse")]
        string SetFCylinders(string a, int c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockMgnt/SetFCylinders", ReplyAction="http://tempuri.org/IStockMgnt/SetFCylindersResponse")]
        System.Threading.Tasks.Task<string> SetFCylindersAsync(string a, int c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockMgnt/SetStoves", ReplyAction="http://tempuri.org/IStockMgnt/SetStovesResponse")]
        string SetStoves(string a, int c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockMgnt/SetStoves", ReplyAction="http://tempuri.org/IStockMgnt/SetStovesResponse")]
        System.Threading.Tasks.Task<string> SetStovesAsync(string a, int c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockMgnt/SetRegulators", ReplyAction="http://tempuri.org/IStockMgnt/SetRegulatorsResponse")]
        string SetRegulators(int a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockMgnt/SetRegulators", ReplyAction="http://tempuri.org/IStockMgnt/SetRegulatorsResponse")]
        System.Threading.Tasks.Task<string> SetRegulatorsAsync(int a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockMgnt/AddStove", ReplyAction="http://tempuri.org/IStockMgnt/AddStoveResponse")]
        string AddStove(LPG_Distribution_System.StockMgntRef.Stove s);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockMgnt/AddStove", ReplyAction="http://tempuri.org/IStockMgnt/AddStoveResponse")]
        System.Threading.Tasks.Task<string> AddStoveAsync(LPG_Distribution_System.StockMgntRef.Stove s);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockMgnt/RemoveStove", ReplyAction="http://tempuri.org/IStockMgnt/RemoveStoveResponse")]
        string RemoveStove(string s);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockMgnt/RemoveStove", ReplyAction="http://tempuri.org/IStockMgnt/RemoveStoveResponse")]
        System.Threading.Tasks.Task<string> RemoveStoveAsync(string s);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockMgnt/SetRegPrice", ReplyAction="http://tempuri.org/IStockMgnt/SetRegPriceResponse")]
        string SetRegPrice(double a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockMgnt/SetRegPrice", ReplyAction="http://tempuri.org/IStockMgnt/SetRegPriceResponse")]
        System.Threading.Tasks.Task<string> SetRegPriceAsync(double a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockMgnt/SetCylPrice", ReplyAction="http://tempuri.org/IStockMgnt/SetCylPriceResponse")]
        string SetCylPrice(string s, double a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockMgnt/SetCylPrice", ReplyAction="http://tempuri.org/IStockMgnt/SetCylPriceResponse")]
        System.Threading.Tasks.Task<string> SetCylPriceAsync(string s, double a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockMgnt/SetStovePrice", ReplyAction="http://tempuri.org/IStockMgnt/SetStovePriceResponse")]
        string SetStovePrice(string s, double a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockMgnt/SetStovePrice", ReplyAction="http://tempuri.org/IStockMgnt/SetStovePriceResponse")]
        System.Threading.Tasks.Task<string> SetStovePriceAsync(string s, double a);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStockMgntChannel : LPG_Distribution_System.StockMgntRef.IStockMgnt, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StockMgntClient : System.ServiceModel.ClientBase<LPG_Distribution_System.StockMgntRef.IStockMgnt>, LPG_Distribution_System.StockMgntRef.IStockMgnt {
        
        public StockMgntClient() {
        }
        
        public StockMgntClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StockMgntClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StockMgntClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StockMgntClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public LPG_Distribution_System.StockMgntRef.Cylinder[] GetCylinders() {
            return base.Channel.GetCylinders();
        }
        
        public System.Threading.Tasks.Task<LPG_Distribution_System.StockMgntRef.Cylinder[]> GetCylindersAsync() {
            return base.Channel.GetCylindersAsync();
        }
        
        public LPG_Distribution_System.StockMgntRef.Stove[] GetStoves() {
            return base.Channel.GetStoves();
        }
        
        public System.Threading.Tasks.Task<LPG_Distribution_System.StockMgntRef.Stove[]> GetStovesAsync() {
            return base.Channel.GetStovesAsync();
        }
        
        public LPG_Distribution_System.StockMgntRef.Stove GetRegulators() {
            return base.Channel.GetRegulators();
        }
        
        public System.Threading.Tasks.Task<LPG_Distribution_System.StockMgntRef.Stove> GetRegulatorsAsync() {
            return base.Channel.GetRegulatorsAsync();
        }
        
        public string SetECylinders(string a, int c) {
            return base.Channel.SetECylinders(a, c);
        }
        
        public System.Threading.Tasks.Task<string> SetECylindersAsync(string a, int c) {
            return base.Channel.SetECylindersAsync(a, c);
        }
        
        public string SetFCylinders(string a, int c) {
            return base.Channel.SetFCylinders(a, c);
        }
        
        public System.Threading.Tasks.Task<string> SetFCylindersAsync(string a, int c) {
            return base.Channel.SetFCylindersAsync(a, c);
        }
        
        public string SetStoves(string a, int c) {
            return base.Channel.SetStoves(a, c);
        }
        
        public System.Threading.Tasks.Task<string> SetStovesAsync(string a, int c) {
            return base.Channel.SetStovesAsync(a, c);
        }
        
        public string SetRegulators(int a) {
            return base.Channel.SetRegulators(a);
        }
        
        public System.Threading.Tasks.Task<string> SetRegulatorsAsync(int a) {
            return base.Channel.SetRegulatorsAsync(a);
        }
        
        public string AddStove(LPG_Distribution_System.StockMgntRef.Stove s) {
            return base.Channel.AddStove(s);
        }
        
        public System.Threading.Tasks.Task<string> AddStoveAsync(LPG_Distribution_System.StockMgntRef.Stove s) {
            return base.Channel.AddStoveAsync(s);
        }
        
        public string RemoveStove(string s) {
            return base.Channel.RemoveStove(s);
        }
        
        public System.Threading.Tasks.Task<string> RemoveStoveAsync(string s) {
            return base.Channel.RemoveStoveAsync(s);
        }
        
        public string SetRegPrice(double a) {
            return base.Channel.SetRegPrice(a);
        }
        
        public System.Threading.Tasks.Task<string> SetRegPriceAsync(double a) {
            return base.Channel.SetRegPriceAsync(a);
        }
        
        public string SetCylPrice(string s, double a) {
            return base.Channel.SetCylPrice(s, a);
        }
        
        public System.Threading.Tasks.Task<string> SetCylPriceAsync(string s, double a) {
            return base.Channel.SetCylPriceAsync(s, a);
        }
        
        public string SetStovePrice(string s, double a) {
            return base.Channel.SetStovePrice(s, a);
        }
        
        public System.Threading.Tasks.Task<string> SetStovePriceAsync(string s, double a) {
            return base.Channel.SetStovePriceAsync(s, a);
        }
    }
}

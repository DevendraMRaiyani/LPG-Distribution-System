//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LPG_Distribution_System.TransactionMgnt {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TransactionMgnt.ITransactionMgnt")]
    public interface ITransactionMgnt {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionMgnt/AddRegulatorTx", ReplyAction="http://tempuri.org/ITransactionMgnt/AddRegulatorTxResponse")]
        string AddRegulatorTx(int qty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionMgnt/AddRegulatorTx", ReplyAction="http://tempuri.org/ITransactionMgnt/AddRegulatorTxResponse")]
        System.Threading.Tasks.Task<string> AddRegulatorTxAsync(int qty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionMgnt/AddStoveTx", ReplyAction="http://tempuri.org/ITransactionMgnt/AddStoveTxResponse")]
        string AddStoveTx(string details, int qty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionMgnt/AddStoveTx", ReplyAction="http://tempuri.org/ITransactionMgnt/AddStoveTxResponse")]
        System.Threading.Tasks.Task<string> AddStoveTxAsync(string details, int qty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionMgnt/AddCylenderTx", ReplyAction="http://tempuri.org/ITransactionMgnt/AddCylenderTxResponse")]
        string AddCylenderTx(string details, int qty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionMgnt/AddCylenderTx", ReplyAction="http://tempuri.org/ITransactionMgnt/AddCylenderTxResponse")]
        System.Threading.Tasks.Task<string> AddCylenderTxAsync(string details, int qty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionMgnt/BookingCylinderTx", ReplyAction="http://tempuri.org/ITransactionMgnt/BookingCylinderTxResponse")]
        string BookingCylinderTx(int cid, int qty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionMgnt/BookingCylinderTx", ReplyAction="http://tempuri.org/ITransactionMgnt/BookingCylinderTxResponse")]
        System.Threading.Tasks.Task<string> BookingCylinderTxAsync(int cid, int qty);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITransactionMgntChannel : LPG_Distribution_System.TransactionMgnt.ITransactionMgnt, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TransactionMgntClient : System.ServiceModel.ClientBase<LPG_Distribution_System.TransactionMgnt.ITransactionMgnt>, LPG_Distribution_System.TransactionMgnt.ITransactionMgnt {
        
        public TransactionMgntClient() {
        }
        
        public TransactionMgntClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TransactionMgntClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TransactionMgntClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TransactionMgntClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string AddRegulatorTx(int qty) {
            return base.Channel.AddRegulatorTx(qty);
        }
        
        public System.Threading.Tasks.Task<string> AddRegulatorTxAsync(int qty) {
            return base.Channel.AddRegulatorTxAsync(qty);
        }
        
        public string AddStoveTx(string details, int qty) {
            return base.Channel.AddStoveTx(details, qty);
        }
        
        public System.Threading.Tasks.Task<string> AddStoveTxAsync(string details, int qty) {
            return base.Channel.AddStoveTxAsync(details, qty);
        }
        
        public string AddCylenderTx(string details, int qty) {
            return base.Channel.AddCylenderTx(details, qty);
        }
        
        public System.Threading.Tasks.Task<string> AddCylenderTxAsync(string details, int qty) {
            return base.Channel.AddCylenderTxAsync(details, qty);
        }
        
        public string BookingCylinderTx(int cid, int qty) {
            return base.Channel.BookingCylinderTx(cid, qty);
        }
        
        public System.Threading.Tasks.Task<string> BookingCylinderTxAsync(int cid, int qty) {
            return base.Channel.BookingCylinderTxAsync(cid, qty);
        }
    }
}

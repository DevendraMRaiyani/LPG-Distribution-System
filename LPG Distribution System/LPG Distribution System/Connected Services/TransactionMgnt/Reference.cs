//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LPG_Distribution_System.TransactionMgnt {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TxCylinder", Namespace="http://schemas.datacontract.org/2004/07/WcfService2")]
    [System.SerializableAttribute()]
    public partial class TxCylinder : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CGSTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CashMemoNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CylinderDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuentityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SGSTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TxDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TxIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CGST {
            get {
                return this.CGSTField;
            }
            set {
                if ((this.CGSTField.Equals(value) != true)) {
                    this.CGSTField = value;
                    this.RaisePropertyChanged("CGST");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CashMemoNo {
            get {
                return this.CashMemoNoField;
            }
            set {
                if ((this.CashMemoNoField.Equals(value) != true)) {
                    this.CashMemoNoField = value;
                    this.RaisePropertyChanged("CashMemoNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CylinderDetails {
            get {
                return this.CylinderDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.CylinderDetailsField, value) != true)) {
                    this.CylinderDetailsField = value;
                    this.RaisePropertyChanged("CylinderDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quentity {
            get {
                return this.QuentityField;
            }
            set {
                if ((this.QuentityField.Equals(value) != true)) {
                    this.QuentityField = value;
                    this.RaisePropertyChanged("Quentity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SGST {
            get {
                return this.SGSTField;
            }
            set {
                if ((this.SGSTField.Equals(value) != true)) {
                    this.SGSTField = value;
                    this.RaisePropertyChanged("SGST");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TxDate {
            get {
                return this.TxDateField;
            }
            set {
                if ((this.TxDateField.Equals(value) != true)) {
                    this.TxDateField = value;
                    this.RaisePropertyChanged("TxDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TxId {
            get {
                return this.TxIdField;
            }
            set {
                if ((this.TxIdField.Equals(value) != true)) {
                    this.TxIdField = value;
                    this.RaisePropertyChanged("TxId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GSTRates", Namespace="http://schemas.datacontract.org/2004/07/WcfService2")]
    [System.SerializableAttribute()]
    public partial class GSTRates : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CGSTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ComodityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SGSTField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CGST {
            get {
                return this.CGSTField;
            }
            set {
                if ((this.CGSTField.Equals(value) != true)) {
                    this.CGSTField = value;
                    this.RaisePropertyChanged("CGST");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comodity {
            get {
                return this.ComodityField;
            }
            set {
                if ((object.ReferenceEquals(this.ComodityField, value) != true)) {
                    this.ComodityField = value;
                    this.RaisePropertyChanged("Comodity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SGST {
            get {
                return this.SGSTField;
            }
            set {
                if ((this.SGSTField.Equals(value) != true)) {
                    this.SGSTField = value;
                    this.RaisePropertyChanged("SGST");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TransactionMgnt.ITransactionMgnt")]
    public interface ITransactionMgnt {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionMgnt/AddRegulatorTx", ReplyAction="http://tempuri.org/ITransactionMgnt/AddRegulatorTxResponse")]
        string AddRegulatorTx(int qty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionMgnt/AddRegulatorTx", ReplyAction="http://tempuri.org/ITransactionMgnt/AddRegulatorTxResponse")]
        System.Threading.Tasks.Task<string> AddRegulatorTxAsync(int qty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionMgnt/AddStoveTx", ReplyAction="http://tempuri.org/ITransactionMgnt/AddStoveTxResponse")]
        string AddStoveTx(string details, int qty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionMgnt/AddStoveTx", ReplyAction="http://tempuri.org/ITransactionMgnt/AddStoveTxResponse")]
        System.Threading.Tasks.Task<string> AddStoveTxAsync(string details, int qty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionMgnt/AddCylenderTx", ReplyAction="http://tempuri.org/ITransactionMgnt/AddCylenderTxResponse")]
        string AddCylenderTx(string details, int qty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionMgnt/AddCylenderTx", ReplyAction="http://tempuri.org/ITransactionMgnt/AddCylenderTxResponse")]
        System.Threading.Tasks.Task<string> AddCylenderTxAsync(string details, int qty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionMgnt/BookingCylinderTx", ReplyAction="http://tempuri.org/ITransactionMgnt/BookingCylinderTxResponse")]
        LPG_Distribution_System.TransactionMgnt.TxCylinder BookingCylinderTx(int cid, int qty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionMgnt/BookingCylinderTx", ReplyAction="http://tempuri.org/ITransactionMgnt/BookingCylinderTxResponse")]
        System.Threading.Tasks.Task<LPG_Distribution_System.TransactionMgnt.TxCylinder> BookingCylinderTxAsync(int cid, int qty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionMgnt/RegulatorTx", ReplyAction="http://tempuri.org/ITransactionMgnt/RegulatorTxResponse")]
        int RegulatorTx(string cname, int qty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionMgnt/RegulatorTx", ReplyAction="http://tempuri.org/ITransactionMgnt/RegulatorTxResponse")]
        System.Threading.Tasks.Task<int> RegulatorTxAsync(string cname, int qty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionMgnt/StoveTx", ReplyAction="http://tempuri.org/ITransactionMgnt/StoveTxResponse")]
        int StoveTx(string cname, string prod, int qty, int cmno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionMgnt/StoveTx", ReplyAction="http://tempuri.org/ITransactionMgnt/StoveTxResponse")]
        System.Threading.Tasks.Task<int> StoveTxAsync(string cname, string prod, int qty, int cmno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionMgnt/GetGSTRates", ReplyAction="http://tempuri.org/ITransactionMgnt/GetGSTRatesResponse")]
        LPG_Distribution_System.TransactionMgnt.GSTRates[] GetGSTRates();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionMgnt/GetGSTRates", ReplyAction="http://tempuri.org/ITransactionMgnt/GetGSTRatesResponse")]
        System.Threading.Tasks.Task<LPG_Distribution_System.TransactionMgnt.GSTRates[]> GetGSTRatesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionMgnt/GetLastTxs", ReplyAction="http://tempuri.org/ITransactionMgnt/GetLastTxsResponse")]
        LPG_Distribution_System.TransactionMgnt.TxCylinder[] GetLastTxs(int cid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransactionMgnt/GetLastTxs", ReplyAction="http://tempuri.org/ITransactionMgnt/GetLastTxsResponse")]
        System.Threading.Tasks.Task<LPG_Distribution_System.TransactionMgnt.TxCylinder[]> GetLastTxsAsync(int cid);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITransactionMgntChannel : LPG_Distribution_System.TransactionMgnt.ITransactionMgnt, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TransactionMgntClient : System.ServiceModel.ClientBase<LPG_Distribution_System.TransactionMgnt.ITransactionMgnt>, LPG_Distribution_System.TransactionMgnt.ITransactionMgnt {
        
        public TransactionMgntClient() {
        }
        
        public TransactionMgntClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TransactionMgntClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TransactionMgntClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TransactionMgntClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string AddRegulatorTx(int qty) {
            return base.Channel.AddRegulatorTx(qty);
        }
        
        public System.Threading.Tasks.Task<string> AddRegulatorTxAsync(int qty) {
            return base.Channel.AddRegulatorTxAsync(qty);
        }
        
        public string AddStoveTx(string details, int qty) {
            return base.Channel.AddStoveTx(details, qty);
        }
        
        public System.Threading.Tasks.Task<string> AddStoveTxAsync(string details, int qty) {
            return base.Channel.AddStoveTxAsync(details, qty);
        }
        
        public string AddCylenderTx(string details, int qty) {
            return base.Channel.AddCylenderTx(details, qty);
        }
        
        public System.Threading.Tasks.Task<string> AddCylenderTxAsync(string details, int qty) {
            return base.Channel.AddCylenderTxAsync(details, qty);
        }
        
        public LPG_Distribution_System.TransactionMgnt.TxCylinder BookingCylinderTx(int cid, int qty) {
            return base.Channel.BookingCylinderTx(cid, qty);
        }
        
        public System.Threading.Tasks.Task<LPG_Distribution_System.TransactionMgnt.TxCylinder> BookingCylinderTxAsync(int cid, int qty) {
            return base.Channel.BookingCylinderTxAsync(cid, qty);
        }
        
        public int RegulatorTx(string cname, int qty) {
            return base.Channel.RegulatorTx(cname, qty);
        }
        
        public System.Threading.Tasks.Task<int> RegulatorTxAsync(string cname, int qty) {
            return base.Channel.RegulatorTxAsync(cname, qty);
        }
        
        public int StoveTx(string cname, string prod, int qty, int cmno) {
            return base.Channel.StoveTx(cname, prod, qty, cmno);
        }
        
        public System.Threading.Tasks.Task<int> StoveTxAsync(string cname, string prod, int qty, int cmno) {
            return base.Channel.StoveTxAsync(cname, prod, qty, cmno);
        }
        
        public LPG_Distribution_System.TransactionMgnt.GSTRates[] GetGSTRates() {
            return base.Channel.GetGSTRates();
        }
        
        public System.Threading.Tasks.Task<LPG_Distribution_System.TransactionMgnt.GSTRates[]> GetGSTRatesAsync() {
            return base.Channel.GetGSTRatesAsync();
        }
        
        public LPG_Distribution_System.TransactionMgnt.TxCylinder[] GetLastTxs(int cid) {
            return base.Channel.GetLastTxs(cid);
        }
        
        public System.Threading.Tasks.Task<LPG_Distribution_System.TransactionMgnt.TxCylinder[]> GetLastTxsAsync(int cid) {
            return base.Channel.GetLastTxsAsync(cid);
        }
    }
}
